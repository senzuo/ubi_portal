<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:beans="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!-- 注解扫描包 -->
    <context:component-scan base-package="com.chh.obd.ubi.*"/>

    <!-- 开启注解 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
            <!-- 配置Fastjson支持 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="features">
                    <list>
                        <!-- 输出key时是否使用双引号 -->
                        <value>QuoteFieldNames</value>
                        <!-- 是否输出值为null的字段 -->
                        <!-- <value>WriteMapNullValue</value> -->
                        <!-- 数值字段如果为null,输出为0,而非null -->
                        <value>WriteNullNumberAsZero</value>
                        <!-- List字段如果为null,输出为[],而非null -->
                        <value>WriteNullListAsEmpty</value>
                        <!-- 字符类型字段如果为null,输出为"",而非null -->
                        <value>WriteNullStringAsEmpty</value>
                        <!-- Boolean字段如果为null,输出为false,而非null -->
                        <value>WriteNullBooleanAsFalse</value>
                        <!-- null String不输出  -->
                        <value>WriteNullStringAsEmpty</value>
                        <!-- null String也要输出  -->
                        <!-- <value>WriteMapNullValue</value> -->

                        <!-- Date的日期转换器 -->
                        <value>WriteDateUseDateFormat</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:default-servlet-handler/>

    <!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd	-->
    <mvc:resources mapping="/framework/**" location="/framework/"/>



    <!-- 使用thymeleaf解析 -->
    <bean id="templateResolver"
          class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML"/>
        <property name="cacheable" value="false"/>
        <!--解决中文乱码-->
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>

    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <!--解决中文乱码-->
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <!--<bean id="viewResolver"-->
          <!--class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
        <!--&lt;!&ndash; 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 &ndash;&gt;-->
        <!--<property name="prefix" value="/WEB-INF/"/>-->
        <!--<property name="suffix" value=".jsp"/>-->
        <!--<property name="order" value="2"/>-->
    <!--</bean>-->

    <!--<bean id="authAssemblyResolver" class="com.chh.obd.ubi.portal.organization.OrganizationController" scope="singleton" />-->

    <!--&lt;!&ndash; 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 &ndash;&gt;  -->
    <!--<bean id="multipartResolver"    -->
    <!--class="org.springframework.web.multipart.commons.CommonsMultipartResolver">     -->
    <!--&lt;!&ndash; 默认编码 &ndash;&gt;  -->
    <!--<property name="defaultEncoding" value="utf-8" />    -->
    <!--&lt;!&ndash; 文件大小最大值 &ndash;&gt;  -->
    <!--<property name="maxUploadSize" value="10485760000" />    -->
    <!--&lt;!&ndash; 内存中的最大值 &ndash;&gt;  -->
    <!--<property name="maxInMemorySize" value="40960" />    -->
    <!--</bean>  -->

    <!--<mvc:interceptors>-->
    <!--<mvc:interceptor>-->
    <!--<mvc:mapping path="/**"/>-->
    <!--<bean id="loginInterceptor" class="com.tcl.miss.base.interceptor.SessionInterceptor">-->
    <!--<property name="excludeUrls">-->
    <!--<list>-->
    <!--<value>/login/login</value>-->
    <!--<value>/login/index</value>-->
    <!--<value>/login/changeMenu</value>-->
    <!--<value>/login/genVerCode</value>-->
    <!--</list>-->
    <!--</property>-->
    <!--</bean>-->
    <!--</mvc:interceptor>-->
    <!--</mvc:interceptors>-->
    <!--<bean id="handlerExceptionResolver"-->
    <!--class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
    <!--<property name="exceptionMappings">-->
    <!--<props>-->
    <!--<prop key="com.tcl.miss.base.exception.NoLoginException">redirect:/login/index</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->
</beans>
